{"version":3,"sources":["../src/carpetplot-ctrl.js"],"names":["MetricsPanelCtrl","_","contextSrv","kbn","createConverter","aggregates","aggregatesMap","fragments","fragmentsMap","labelFormats","svgRendering","canvasRendering","carpetplotOptionsEditor","CANVAS","SVG","panelDefaults","aggregate","AVG","fragment","HOUR","color","colorScheme","nullColor","scale","min","max","xAxis","show","showWeekends","minBucketWidthToShowWeekends","showCrosshair","labelFormat","yAxis","tooltip","legend","data","unitFormat","decimals","renderer","colorSchemes","name","value","invert","CarpetPlotCtrl","$scope","$injector","$rootScope","timeSrv","onDataReceived","dataList","transformData","render","onInitEditMode","addEditorTab","unitFormats","getUnitFormats","onRender","fragmentOptions","aggregateOptions","xAxisLabelFormats","theme","user","lightTheme","defaultsDeep","panel","events","on","converter","timeRange","from","to","convertData","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"carpetplot-ctrl.js","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\r\nimport _ from 'lodash';\r\nimport { contextSrv } from 'app/core/core';\r\nimport kbn from 'app/core/utils/kbn';\r\n\r\nimport createConverter from './data-converter';\r\nimport aggregates, { aggregatesMap } from './aggregates';\r\nimport fragments, { fragmentsMap } from './fragments';\r\nimport { labelFormats } from './xAxisLabelFormats';\r\nimport svgRendering from './svg/rendering';\r\nimport canvasRendering from './canvas/rendering';\r\nimport { carpetplotOptionsEditor } from './options-editor';\r\nimport './css/carpet-plot.css!';\r\n\r\nconst CANVAS = 'CANVAS';\r\nconst SVG = 'SVG';\r\n\r\nconst panelDefaults = {\r\n  aggregate: aggregates.AVG,\r\n  fragment: fragments.HOUR,\r\n  color: {\r\n    colorScheme: 'interpolateRdYlGn',\r\n    nullColor: 'transparent'\r\n  },\r\n  scale: {\r\n    min: null,\r\n    max: null\r\n  },\r\n  xAxis: {\r\n    show: true,\r\n    showWeekends: true,\r\n    minBucketWidthToShowWeekends: 4,\r\n    showCrosshair: true,\r\n    labelFormat: '%a %m/%d'\r\n  },\r\n  yAxis: {\r\n    show: true,\r\n    showCrosshair: false\r\n  },\r\n  tooltip: {\r\n    show: true\r\n  },\r\n  legend: {\r\n    show: true\r\n  },\r\n  data: {\r\n    unitFormat: 'short',\r\n    decimals: null\r\n  }\r\n};\r\n\r\nconst renderer = CANVAS;\r\n\r\nconst colorSchemes = [\r\n  // Diverging\r\n  { name: 'Spectral', value: 'interpolateSpectral', invert: 'always' },\r\n  { name: 'RdYlGn', value: 'interpolateRdYlGn', invert: 'always' },\r\n\r\n  // Sequential (Single Hue)\r\n  { name: 'Blues', value: 'interpolateBlues', invert: 'dark' },\r\n  { name: 'Greens', value: 'interpolateGreens', invert: 'dark' },\r\n  { name: 'Greys', value: 'interpolateGreys', invert: 'dark' },\r\n  { name: 'Oranges', value: 'interpolateOranges', invert: 'dark' },\r\n  { name: 'Purples', value: 'interpolatePurples', invert: 'dark' },\r\n  { name: 'Reds', value: 'interpolateReds', invert: 'dark' },\r\n\r\n  // Sequential (Multi-Hue)\r\n  { name: 'BuGn', value: 'interpolateBuGn', invert: 'dark' },\r\n  { name: 'BuPu', value: 'interpolateBuPu', invert: 'dark' },\r\n  { name: 'GnBu', value: 'interpolateGnBu', invert: 'dark' },\r\n  { name: 'OrRd', value: 'interpolateOrRd', invert: 'dark' },\r\n  { name: 'PuBuGn', value: 'interpolatePuBuGn', invert: 'dark' },\r\n  { name: 'PuBu', value: 'interpolatePuBu', invert: 'dark' },\r\n  { name: 'PuRd', value: 'interpolatePuRd', invert: 'dark' },\r\n  { name: 'RdPu', value: 'interpolateRdPu', invert: 'dark' },\r\n  { name: 'YlGnBu', value: 'interpolateYlGnBu', invert: 'dark' },\r\n  { name: 'YlGn', value: 'interpolateYlGn', invert: 'dark' },\r\n  { name: 'YlOrBr', value: 'interpolateYlOrBr', invert: 'dark' },\r\n  { name: 'YlOrRd', value: 'interpolateYlOrRd', invert: 'darm' }\r\n];\r\n\r\nexport class CarpetPlotCtrl extends MetricsPanelCtrl {\r\n  static templateUrl = 'module.html';\r\n\r\n  constructor($scope, $injector, $rootScope, timeSrv) {\r\n    super($scope, $injector);\r\n\r\n    this.dataList = null;\r\n    this.data = {};\r\n    this.timeSrv = timeSrv;\r\n    this.colorSchemes = colorSchemes;\r\n    this.fragmentOptions = fragmentsMap;\r\n    this.aggregateOptions = aggregatesMap;\r\n    this.xAxisLabelFormats = labelFormats;\r\n    this.theme = contextSrv.user.lightTheme ? 'light' : 'dark';\r\n\r\n    _.defaultsDeep(this.panel, panelDefaults);\r\n\r\n    this.events.on('data-received', this.onDataReceived);\r\n    this.events.on('data-snapshot-load', this.onDataReceived);\r\n    this.events.on('init-edit-mode', this.onInitEditMode);\r\n    this.events.on('render', this.onRender);\r\n  }\r\n\r\n  onDataReceived = (dataList) => {\r\n    this.dataList = dataList;\r\n    this.data = this.transformData(dataList);\r\n    this.render();\r\n  }\r\n\r\n  onInitEditMode = () => {\r\n    this.addEditorTab('Options', carpetplotOptionsEditor, 2);\r\n    this.unitFormats = kbn.getUnitFormats();\r\n  }\r\n\r\n  onRender = () => {\r\n    if (!this.dataList) { return; }\r\n    this.data = this.transformData(this.dataList);\r\n  }\r\n\r\n  transformData(data) {\r\n    const converter = createConverter(this.panel.aggregate, this.panel.fragment);\r\n    const { from, to } = this.timeSrv.timeRange();\r\n    return converter.convertData(from, to, data);\r\n  }\r\n\r\n  link(scope, elem, attrs, ctrl) {\r\n    switch (renderer) {\r\n      case CANVAS: {\r\n        canvasRendering(scope, elem, attrs, ctrl);\r\n        break;\r\n      }\r\n      case SVG: {\r\n        svgRendering(scope, elem, attrs, ctrl);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}"]}