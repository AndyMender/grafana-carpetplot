{"version":3,"sources":["../src/rendering.js"],"names":["link","scope","elem","attrs","ctrl","data","panel","timeRange","carpet","$carpet","find","margin","left","right","top","bottom","width","height","min","max","chartHeight","chartWidth","chartTop","chartBottom","xAxisHeight","yAxisWidth","yScale","xScale","colorScale","events","on","render","renderingCompleted","addCarpetplot","addCarpetplotCanvas","addAxes","getMinMax","getColorScale","Math","floor","remove","d3","select","append","attr","addYAxis","getYAxisWidth","Y_AXIS_TICK_PADDING","addXAxis","getXAxisHeight","yMin","yMax","ticks","tickInterval","tickStep","yAxis","scaleLinear","domain","range","axisLeft","tickFormat","value","toString","padStart","tickSizeInner","tickSizeOuter","tickPadding","call","posY","posX","yAxisGroup","selectAll","scaleTime","from","to","DEFAULT_X_TICK_SIZE_PX","grafanaTimeFormatter","grafanaTimeFormat","xAxis","axisBottom","timeFormat","X_AXIS_TICK_PADDING","tickSize","axisText","nodes","text","$","outerWidth","axisLine","empty","axisLinePosition","parseFloat","canvasHeight","scale","isSet","stats","colorScheme","_","colorSchemes","color","colorInterpolator","colorScaleInverted","invert","contextSrv","user","lightTheme","start","end","scaleSequential","prop","undefined","console","log","secPerTick","oneDay","oneYear","MIN_SELECTION_WIDTH"],"mappings":"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","file":"rendering.js","sourcesContent":["import d3 from 'd3';\r\nimport _ from 'lodash';\r\nimport { contextSrv } from 'app/core/core';\r\nimport { tickStep } from 'app/core/utils/ticks';\r\n\r\nconst\r\n  DEFAULT_X_TICK_SIZE_PX = 100,\r\n  X_AXIS_TICK_PADDING = 10,\r\n  Y_AXIS_TICK_PADDING = 5,\r\n  MIN_SELECTION_WIDTH = 2;\r\n\r\nexport default function link(scope, elem, attrs, ctrl) {\r\n  let data, panel, timeRange, carpet;\r\n\r\n  const $carpet = elem.find('.carpetplot-panel');\r\n\r\n  // const padding = { left: 0, right: 0, top: 0, bottom: 0 };\r\n  const margin = { left: 25, right: 15, top: 10, bottom: 20 };\r\n\r\n  let width, height,\r\n    min, max,\r\n    chartHeight, chartWidth,\r\n    chartTop, chartBottom,\r\n    xAxisHeight, yAxisWidth,\r\n    yScale, xScale,\r\n    colorScale;\r\n\r\n  ctrl.events.on('render', () => {\r\n    render();\r\n    ctrl.renderingCompleted();\r\n  });\r\n\r\n  function addCarpetplot() {\r\n    if (!data.data) { return; }\r\n\r\n    addCarpetplotCanvas();\r\n    addAxes();\r\n\r\n    [min, max] = getMinMax();\r\n    colorScale = getColorScale(min, max);\r\n\r\n\r\n  }\r\n\r\n  function addCarpetplotCanvas() {\r\n    width = Math.floor($carpet.width());\r\n    height = ctrl.height;\r\n\r\n    if (carpet) {\r\n      carpet.remove();\r\n    }\r\n\r\n    carpet = d3.select($carpet[0])\r\n      .append('svg')\r\n      .attr('width', width)\r\n      .attr('height', height);\r\n  }\r\n\r\n  function addAxes() {\r\n    chartHeight = height - margin.top - margin.bottom;\r\n    chartTop = margin.top;\r\n    chartBottom = chartTop + chartHeight;\r\n\r\n    addYAxis();\r\n    yAxisWidth = getYAxisWidth() + Y_AXIS_TICK_PADDING;\r\n    chartWidth = width - yAxisWidth - margin.right;\r\n\r\n    addXAxis();\r\n    xAxisHeight = getXAxisHeight();\r\n\r\n    // if (!panel.yAxis.show) {\r\n    //   heatmap.select('.axis-y').selectAll('line').style('opacity', 0);\r\n    // }\r\n\r\n    // if (!panel.xAxis.show) {\r\n    //   heatmap.select('.axis-x').selectAll('line').style('opacity', 0);\r\n    // }\r\n  }\r\n\r\n  function addYAxis() {\r\n    const yMin = 24;\r\n    const yMax = 0;\r\n    const ticks = 6;\r\n    const tickInterval = tickStep(yMin, yMax, ticks);\r\n\r\n    data.yAxis = {\r\n      min: yMin,\r\n      max: yMax,\r\n      ticks: ticks\r\n    };\r\n\r\n    scope.yScale = yScale = d3.scaleLinear()\r\n      .domain([yMin, yMax])\r\n      .range([chartHeight, 0]);\r\n\r\n    const yAxis = d3.axisLeft(yScale)\r\n      .ticks(ticks)\r\n      .tickFormat((value) => `${value.toString().padStart(2, '0')}:00`)\r\n      .tickSizeInner(0 - width)\r\n      .tickSizeOuter(0)\r\n      .tickPadding(Y_AXIS_TICK_PADDING);\r\n\r\n    carpet.append('g')\r\n      .attr('class', 'axis axis-y')\r\n      .call(yAxis);\r\n\r\n    const posY = margin.top;\r\n    const posX = getYAxisWidth() + Y_AXIS_TICK_PADDING;\r\n\r\n    const yAxisGroup = carpet.select('.axis-y');\r\n    yAxisGroup.attr('transform', `translate(${posX},${posY})`);\r\n    yAxisGroup.select('.domain').remove();\r\n    yAxisGroup.selectAll('.tick line').remove();\r\n  }\r\n\r\n  function addXAxis() {\r\n    scope.xScale = xScale = d3.scaleTime()\r\n      .domain([timeRange.from, timeRange.to])\r\n      .range([0, chartWidth]);\r\n\r\n    const ticks = chartWidth / DEFAULT_X_TICK_SIZE_PX;\r\n    const grafanaTimeFormatter = grafanaTimeFormat(ticks, timeRange.from, timeRange.to);\r\n\r\n    const xAxis = d3.axisBottom(xScale)\r\n      .ticks(ticks)\r\n      .tickFormat(d3.timeFormat(grafanaTimeFormatter))\r\n      .tickPadding(X_AXIS_TICK_PADDING)\r\n      .tickSize(chartHeight);\r\n\r\n    const posY = margin.top;\r\n    const posX = yAxisWidth;\r\n    carpet.append('g')\r\n      .attr('class', 'axis axis-x')\r\n      .attr('transform', `translate(${posX},${posY})`)\r\n      .call(xAxis);\r\n\r\n    carpet.select('.axis-x').select('.domain').remove();\r\n  }\r\n\r\n  function getYAxisWidth() {\r\n    const axisText = carpet.selectAll('.axis-y text').nodes();\r\n    return d3.max(axisText, (text) => $(text).outerWidth());\r\n  }\r\n\r\n  function getXAxisHeight() {\r\n    const axisLine = carpet.select('.axis-x line');\r\n    if (!axisLine.empty()) {\r\n      const axisLinePosition = parseFloat(carpet.select('.axis-x line').attr('y2'));\r\n      const canvasHeight = parseFloat(carpet.attr('height'));\r\n      return canvasHeight - axisLinePosition;\r\n    } else {\r\n      // Default height\r\n      return 30;\r\n    }\r\n  }\r\n\r\n  function getMinMax() {\r\n    const { min, max } = panel.scale;\r\n    return [\r\n      isSet(min) ? min : data.stats.min,\r\n      isSet(max) ? max : data.stats.max\r\n    ];\r\n  }\r\n\r\n  function getColorScale(min, max) {\r\n    const colorScheme = _.find(ctrl.colorSchemes, { value: panel.color.colorScheme });\r\n    const colorInterpolator = d3[colorScheme.value];\r\n    const colorScaleInverted = colorScheme.invert === 'always' || (colorScheme.invert === 'dark' && !contextSrv.user.lightTheme);\r\n\r\n    const start = colorScaleInverted ? max : min;\r\n    const end = colorScaleInverted ? min : max;\r\n\r\n    return d3\r\n      .scaleSequential(colorInterpolator)\r\n      .domain([start, end]);\r\n  }\r\n\r\n  function isSet(prop) {\r\n    return prop !== undefined && prop !== null && prop !== '';\r\n  }\r\n\r\n  function render() {\r\n    data = ctrl.data;\r\n    panel = ctrl.panel;\r\n    timeRange = ctrl.range;\r\n\r\n    console.log(data)\r\n\r\n    addCarpetplot();\r\n  }\r\n}\r\n\r\nfunction grafanaTimeFormat(ticks, min, max) {\r\n  if (min && max && ticks) {\r\n    const range = max - min;\r\n    const secPerTick = (range / ticks) / 1000;\r\n    const oneDay = 86400000;\r\n    const oneYear = 31536000000;\r\n\r\n    if (secPerTick <= 45) {\r\n      return '%H:%M:%S';\r\n    }\r\n    if (secPerTick <= 7200 || range <= oneDay) {\r\n      return '%H:%M';\r\n    }\r\n    if (secPerTick <= 80000) {\r\n      return '%m/%d %H:%M';\r\n    }\r\n    if (secPerTick <= 2419200 || range <= oneYear) {\r\n      return '%m/%d';\r\n    }\r\n    return '%Y-%m';\r\n  }\r\n\r\n  return '%H:%M';\r\n}"]}