{"version":3,"sources":["../src/rendering.js"],"names":["link","scope","elem","attrs","ctrl","data","panel","timeRange","carpet","$carpet","find","margin","left","right","top","bottom","width","height","min","max","xFrom","xTo","days","chartHeight","chartWidth","chartTop","chartBottom","xAxisHeight","yAxisWidth","yScale","xScale","colorScale","fragment","mouseUpHandler","originalPointColor","selection","active","x1","x2","events","on","render","renderingCompleted","addCarpetplot","addCarpetplotCanvas","addAxes","getMinMax","getColorScale","addPoints","Math","floor","remove","d3","select","append","attr","addYAxis","getYAxisWidth","Y_AXIS_TICK_PADDING","addXAxis","getXAxisHeight","scaleTime","domain","moment","startOf","add","range","yAxis","axisLeft","ticks","timeHour","every","tickFormat","value","format","tickSizeInner","tickSizeOuter","tickPadding","call","posY","posX","yAxisGroup","selectAll","axisText","nodes","text","$","outerWidth","from","local","to","diff","xAxis","axisBottom","getXAxisTicks","timeFormat","tickSize","style","axisLine","empty","axisLinePosition","parseFloat","canvasHeight","count","X_AXIS_TICK_MIN_SIZE","step","ceil","timeDay","timeWeek","timeMonth","container","insert","cols","enter","day","time","toDate","pointScale","scaleLinear","points","d","i","buckets","color","nullColor","$points","event","highlightPoint","resetPointHighLight","target","highlightColor","darker","currentPoint","scale","isSet","stats","colorScheme","_","colorSchemes","colorInterpolator","colorScaleInverted","invert","contextSrv","user","lightTheme","start","end","scaleSequential","prop","undefined","onMouseDown","offsetX","onMouseUp","document","one","unbind","selectionRange","abs","MIN_SELECTION_WIDTH","timeFrom","timeTo","timeSrv","setTime","utc","clearSelection","onMouseLeave","clearCrosshair","onMouseMove","limitSelection","drawSelection","drawCrosshair","position","posX1","posX2","selectionX","selectionWidth","getFragment","console","log","appEvents","tickStep","DEFAULT_X_TICK_SIZE_PX"],"mappings":"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","file":"rendering.js","sourcesContent":["import d3 from 'd3';\r\nimport _ from 'lodash';\r\nimport { appEvents, contextSrv } from 'app/core/core';\r\nimport { tickStep } from 'app/core/utils/ticks';\r\nimport moment from 'moment';\r\n\r\nimport { getFragment } from './fragments';\r\n\r\nconst\r\n  DEFAULT_X_TICK_SIZE_PX = 100,\r\n  X_AXIS_TICK_MIN_SIZE = 100,\r\n  Y_AXIS_TICK_PADDING = 5,\r\n  MIN_SELECTION_WIDTH = 2;\r\n\r\nexport default function link(scope, elem, attrs, ctrl) {\r\n  let data, panel, timeRange, carpet;\r\n\r\n  const $carpet = elem.find('.carpetplot-panel');\r\n\r\n  // const padding = { left: 0, right: 0, top: 0, bottom: 0 };\r\n  const margin = { left: 25, right: 15, top: 10, bottom: 65 };\r\n\r\n  let width, height,\r\n    min, max,\r\n    xFrom, xTo, days,\r\n    chartHeight, chartWidth,\r\n    chartTop, chartBottom,\r\n    xAxisHeight, yAxisWidth,\r\n    yScale, xScale,\r\n    colorScale, fragment,\r\n    mouseUpHandler,\r\n    originalPointColor;\r\n\r\n  const selection = {\r\n    active: false,\r\n    x1: -1,\r\n    x2: -1\r\n  };\r\n\r\n  ctrl.events.on('render', () => {\r\n    render();\r\n    ctrl.renderingCompleted();\r\n  });\r\n\r\n  function addCarpetplot() {\r\n    if (!data.data) { return; }\r\n\r\n    addCarpetplotCanvas();\r\n    addAxes();\r\n\r\n    [min, max] = getMinMax();\r\n    colorScale = getColorScale(min, max);\r\n\r\n    addPoints(colorScale);\r\n  }\r\n\r\n  function addCarpetplotCanvas() {\r\n    width = Math.floor($carpet.width());\r\n    height = ctrl.height;\r\n\r\n    if (carpet) {\r\n      carpet.remove();\r\n    }\r\n\r\n    carpet = d3.select($carpet[0])\r\n      .append('svg')\r\n      .attr('width', width)\r\n      .attr('height', height);\r\n  }\r\n\r\n  function addAxes() {\r\n    chartHeight = height - margin.top - margin.bottom;\r\n    chartTop = margin.top;\r\n    chartBottom = chartTop + chartHeight;\r\n\r\n    addYAxis();\r\n    yAxisWidth = getYAxisWidth() + Y_AXIS_TICK_PADDING;\r\n    chartWidth = width - yAxisWidth - margin.right;\r\n\r\n    addXAxis();\r\n    xAxisHeight = getXAxisHeight();\r\n\r\n    // if (!panel.yAxis.show) {\r\n    //   heatmap.select('.axis-y').selectAll('line').style('opacity', 0);\r\n    // }\r\n\r\n    // if (!panel.xAxis.show) {\r\n    //   heatmap.select('.axis-x').selectAll('line').style('opacity', 0);\r\n    // }\r\n  }\r\n\r\n  function addYAxis() {\r\n    scope.yScale = yScale = d3.scaleTime()\r\n      .domain([moment().startOf('day').add(1, 'day'), moment().startOf('day')])\r\n      .range([chartHeight, 0]);\r\n\r\n    const yAxis = d3.axisLeft(yScale)\r\n      .ticks(d3.timeHour.every(4))\r\n      .tickFormat((value) => moment(value).format('HH:mm'))\r\n      .tickSizeInner(0 - width)\r\n      .tickSizeOuter(0)\r\n      .tickPadding(Y_AXIS_TICK_PADDING);\r\n\r\n    carpet.append('g')\r\n      .attr('class', 'axis axis-y')\r\n      .call(yAxis);\r\n\r\n    const posY = margin.top;\r\n    const posX = getYAxisWidth() + Y_AXIS_TICK_PADDING;\r\n\r\n    const yAxisGroup = carpet.select('.axis-y');\r\n    yAxisGroup.attr('transform', `translate(${posX},${posY})`);\r\n    yAxisGroup.select('.domain').remove();\r\n    yAxisGroup.selectAll('.tick line').remove();\r\n  }\r\n\r\n  function getYAxisWidth() {\r\n    const axisText = carpet.selectAll('.axis-y text').nodes();\r\n    return d3.max(axisText, (text) => $(text).outerWidth());\r\n  }\r\n\r\n  function addXAxis() {\r\n    xFrom = moment(data.from.local()).startOf('day');\r\n    xTo = moment(data.to.local()).startOf('day');\r\n    days = xTo.diff(xFrom, 'days');\r\n\r\n    scope.xScale = xScale = d3.scaleTime()\r\n      .domain([xFrom, xTo])\r\n      .range([0, chartWidth]);\r\n\r\n    const xAxis = d3.axisBottom(xScale)\r\n      .ticks(getXAxisTicks(xFrom, xTo))\r\n      .tickFormat(d3.timeFormat('%a %m/%d'))\r\n      .tickSize(chartHeight);\r\n\r\n    const posY = margin.top;\r\n    const posX = yAxisWidth;\r\n    carpet.append('g')\r\n      .attr('class', 'axis axis-x')\r\n      .attr('transform', `translate(${posX},${posY})`)\r\n      .call(xAxis)\r\n      .selectAll('text')\r\n      .style('text-anchor', 'end')\r\n      .attr('dx', '-.8em')\r\n      .attr('dy', '.15em')\r\n      .attr('y', 0)\r\n      .attr('transform', `translate(5,${posY + chartHeight - 10}) rotate(-65)`);\r\n\r\n    carpet.select('.axis-x').select('.domain').remove();\r\n  }\r\n\r\n  function getXAxisHeight() {\r\n    const axisLine = carpet.select('.axis-x line');\r\n    if (!axisLine.empty()) {\r\n      const axisLinePosition = parseFloat(carpet.select('.axis-x line').attr('y2'));\r\n      const canvasHeight = parseFloat(carpet.attr('height'));\r\n      return canvasHeight - axisLinePosition;\r\n    } else {\r\n      // Default height\r\n      return 30;\r\n    }\r\n  }\r\n\r\n  function getXAxisTicks(from, to) {\r\n    const count = chartWidth / X_AXIS_TICK_MIN_SIZE;\r\n    const step = Math.ceil(days / count);\r\n    if (step < 7) {\r\n      return d3.timeDay.every(step);\r\n    }\r\n    if (step < 28) {\r\n      return d3.timeWeek.every(Math.floor(step / 7));\r\n    }\r\n    return d3.timeMonth.every(1);\r\n  }\r\n\r\n  function addPoints(colorScale) {\r\n    const container = carpet.insert('g', ':first-child')\r\n      .attr('class', 'carpet-container')\r\n      .attr('transform', `translate(${yAxisWidth},${margin.top})`);\r\n\r\n    const cols = container\r\n      .selectAll('.carpet-col')\r\n      .data(data.data)\r\n      .enter()\r\n      .append('g')\r\n      .attr('transform', (day) => `translate(${xScale(day.time.toDate())},0)`);\r\n\r\n    const width = chartWidth / days;\r\n    const height = chartHeight / fragment.count;\r\n    const pointScale = d3.scaleLinear()\r\n      .domain([24, 0])\r\n      .range([chartHeight, 0])\r\n\r\n    const points = cols\r\n      .selectAll('.carpet-point')\r\n      .data((d, i) => d.buckets)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('class', 'carpet-point')\r\n      .attr('fill', value => value === null ? panel.color.nullColor : colorScale(value))\r\n      .attr('x', 0)\r\n      .attr('y', (d, i) => pointScale(i))\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .attr('title', (d, i) => `${i}: ${d}`);\r\n\r\n    const $points = $carpet.find('.carpet-point');\r\n    $points\r\n      .on('mouseenter', (event) => {\r\n        // tooltip.mouseOverBucket = true;\r\n        highlightPoint(event);\r\n      })\r\n      .on('mouseleave', (event) => {\r\n        // tooltip.mouseOverBucket = false;\r\n        resetPointHighLight(event);\r\n      });\r\n  }\r\n\r\n  function highlightPoint(event) {\r\n    const color = d3.select(event.target).style('fill');\r\n    const highlightColor = d3.color(color).darker(1);\r\n    const currentPoint = d3.select(event.target);\r\n    originalPointColor = color;\r\n    currentPoint.style('fill', highlightColor);\r\n  }\r\n\r\n  function resetPointHighLight(event) {\r\n    d3.select(event.target)\r\n      .style('fill', originalPointColor);\r\n  }\r\n\r\n  function getMinMax() {\r\n    const { min, max } = panel.scale;\r\n    return [\r\n      isSet(min) ? min : data.stats.min,\r\n      isSet(max) ? max : data.stats.max\r\n    ];\r\n  }\r\n\r\n  function getColorScale(min, max) {\r\n    const colorScheme = _.find(ctrl.colorSchemes, { value: panel.color.colorScheme });\r\n    const colorInterpolator = d3[colorScheme.value];\r\n    const colorScaleInverted = colorScheme.invert === 'always' || (colorScheme.invert === 'dark' && !contextSrv.user.lightTheme);\r\n\r\n    const start = colorScaleInverted ? max : min;\r\n    const end = colorScaleInverted ? min : max;\r\n\r\n    return d3\r\n      .scaleSequential(colorInterpolator)\r\n      .domain([start, end]);\r\n  }\r\n\r\n  function isSet(prop) {\r\n    return prop !== undefined && prop !== null && prop !== '';\r\n  }\r\n\r\n  // Selection, Crosshair, Tooltip\r\n  // appEvents.on('graph-hover', event => {\r\n  //   drawSharedCrosshair(event.pos);\r\n  // }, scope);\r\n\r\n  // appEvents.on('graph-hover-clear', () => {\r\n  //   clearCrosshair();\r\n  // }, scope);\r\n\r\n  function onMouseDown(event) {\r\n    selection.active = true;\r\n    selection.x1 = event.offsetX;\r\n\r\n    mouseUpHandler = () => onMouseUp();\r\n\r\n    $(document).one('mouseup', mouseUpHandler);\r\n  }\r\n\r\n  function onMouseUp() {\r\n    $(document).unbind('mouseup', mouseUpHandler);\r\n    mouseUpHandler = null;\r\n    selection.active = false;\r\n\r\n    const selectionRange = Math.abs(selection.x2 - selection.x1);\r\n\r\n    if (selection.x2 >= 0 && selectionRange > MIN_SELECTION_WIDTH) {\r\n      const timeFrom = xScale.invert(Math.min(selection.x1, selection.x2) - yAxisWidth);\r\n      const timeTo = xScale.invert(Math.max(selection.x1, selection.x2) - yAxisWidth);\r\n\r\n      ctrl.timeSrv.setTime({\r\n        from: moment.utc(timeFrom),\r\n        to: moment.utc(timeTo)\r\n      });\r\n    }\r\n\r\n    clearSelection();\r\n  }\r\n\r\n  function onMouseLeave() {\r\n    // appEvents.emit('graph-hover-clear');\r\n    clearCrosshair();\r\n  }\r\n\r\n  function onMouseMove(event) {\r\n    if (!carpet) { return; }\r\n\r\n    if (selection.active) {\r\n      clearCrosshair();\r\n      // tooltip.destroy();\r\n\r\n      selection.x2 = limitSelection(event.offsetX);\r\n      drawSelection(selection.x1, selection.x2);\r\n    } else {\r\n      drawCrosshair(event.offsetX);\r\n      // tooltip.show(event, data);\r\n    }\r\n  }\r\n\r\n  function drawCrosshair(position) {\r\n    if (!carpet) { return; }\r\n\r\n    carpet.selectAll('.heatmap-crosshair').remove();\r\n\r\n    let posX = position;\r\n    posX = Math.max(posX, yAxisWidth);\r\n    posX = Math.min(posX, chartWidth + yAxisWidth);\r\n\r\n    carpet.append('g')\r\n      .attr('class', 'heatmap-crosshair')\r\n      .attr('transform', 'translate(' + posX + ',0)')\r\n      .append('line')\r\n      .attr('x1', 1)\r\n      .attr('y1', chartTop)\r\n      .attr('x2', 1)\r\n      .attr('y2', chartBottom)\r\n      .attr('stroke-width', 1);\r\n\r\n  }\r\n\r\n  // function drawSharedCrosshair(pos) {\r\n  //   if (!carpet || ctrl.dashboard.graphTooltip === 0) { return; }\r\n\r\n  //   const posX = xScale(pos.x) + yAxisWidth;\r\n  //   drawCrosshair(posX);\r\n  // }\r\n\r\n  function clearCrosshair() {\r\n    if (!carpet) { return; }\r\n\r\n    carpet.selectAll('.heatmap-crosshair').remove();\r\n  }\r\n\r\n  function limitSelection(x2) {\r\n    x2 = Math.max(x2, yAxisWidth);\r\n    x2 = Math.min(x2, chartWidth + yAxisWidth);\r\n    return x2;\r\n  }\r\n\r\n  function drawSelection(posX1, posX2) {\r\n    if (!carpet) { return; }\r\n\r\n    carpet.selectAll('.carpet-selection').remove();\r\n    const selectionX = Math.min(posX1, posX2);\r\n    const selectionWidth = Math.abs(posX1 - posX2);\r\n\r\n    if (selectionWidth > MIN_SELECTION_WIDTH) {\r\n      carpet.append('rect')\r\n        .attr('class', 'carpet-selection')\r\n        .attr('x', selectionX)\r\n        .attr('width', selectionWidth)\r\n        .attr('y', chartTop)\r\n        .attr('height', chartHeight);\r\n    }\r\n  }\r\n\r\n  function clearSelection() {\r\n    selection.x1 = -1;\r\n    selection.x2 = -1;\r\n\r\n    if (!carpet) { return; }\r\n\r\n    carpet.selectAll('.carpet-selection').remove();\r\n\r\n  }\r\n\r\n  // Render\r\n\r\n  function render() {\r\n    data = ctrl.data;\r\n    panel = ctrl.panel;\r\n    timeRange = ctrl.range;\r\n\r\n    fragment = getFragment(panel.fragment);\r\n\r\n    console.log(data)\r\n\r\n    addCarpetplot();\r\n  }\r\n\r\n  $carpet.on('mousedown', onMouseDown);\r\n  $carpet.on('mousemove', onMouseMove);\r\n  $carpet.on('mouseleave', onMouseLeave);\r\n}"]}